{"version":3,"sources":["Header/header.component.jsx","mock-data.js","Utilities/sort.js","friendsProvider.js","AddFriend/AddFriend.component.jsx","FriendCard/FriendCard.component.jsx","FriendList/FriendList.component.jsx","Footer/footer.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","memo","friends","name","favorite","sortIt","arr","sort","a","b","toLowerCase","FriendsContext","createContext","useFriends","useContext","FriendsProvider","children","useState","JSON","parse","window","localStorage","getItem","mockData","setFriends","filteredFriends","setFilteredFriends","currPage","setCurrPage","Math","ceil","length","pages","setPageCount","searchField","setSearchField","search","setSearch","sortFavorite","setSortFavorite","Provider","value","getPaginatedData","startIndex","endIndex","favs","filter","friend","notFavs","concat","slice","AddSearchFriend","add","setName","handleSubmit","e","trimEnd","useEffect","includes","autoComplete","placeholder","id","maxLength","type","onChange","val","target","replace","trimStart","onKeyPress","key","preventDefault","FriendCard","onClick","favFriend","console","log","copy","setFavorite","delFriend","FriendList","paginatedFriends","setItem","stringify","map","Footer","page","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bff3718.chunk.js","sourcesContent":["import React from 'react';\nimport './header.component.css'\n\nfunction Header() {\n        return (\n                <div className=\"header\">\n                        <b><pre>F R I E N D S      L I S T</pre></b>\n                </div>\n        )\n}\n\nexport default React.memo(Header);","const friends = [\n        {\n                name: \"Arkin\",\n                favorite: false\n        },\n        {\n                name: \"Camille\",\n                favorite: false\n        },\n        {\n                name: \"Archie\",\n                favorite: false\n        },\n        {\n                name: \"Ellen\",\n                favorite: false\n        },\n        {\n                name: \"Jack\",\n                favorite: false\n        },\n        {\n                name: \"Henry\",\n                favorite: false\n        },\n        {\n                name: \"Erwin\",\n                favorite: true\n        },\n        {\n                name: \"Jane\",\n                favorite: false\n        },\n        {\n                name: \"Denny\",\n                favorite: false\n        },\n        {\n                name: \"Elijah\",\n                favorite: true\n        },\n        {\n                name: \"Niklaus\",\n                favorite: true\n        },\n        {\n                name: \"Peter\",\n                favorite: true\n        },\n        {\n                name: \"Thiel\",\n                favorite: true\n        },\n        {\n                name: \"Edwin\",\n                favorite: true\n        },\n        {\n                name: \"Hilarious\",\n                favorite: true\n        },\n        {\n                name: \"Stormi\",\n                favorite: true\n        },\n        {\n                name: \"Dollar\",\n                favorite: true\n        },\n        {\n                name: \"Mavi\",\n                favorite: true\n        },\n        {\n                name: \"Toxic\",\n                favorite: true\n        },\n        {\n                name: \"Mortal\",\n                favorite: true\n        },\n        {\n                name: \"Russel\",\n                favorite: true\n        },\n        {\n                name: \"Mikael\",\n                favorite: true\n        },\n        {\n                name: \"Parth\",\n                favorite: true\n        },\n        {\n                name: \"Napier\",\n                favorite: true\n        },\n        {\n                name: \"Viper\",\n                favorite: true\n        },\n        {\n                name: \"David\",\n                favorite: true\n        }\n\n]\n\nexport default friends;","export default function sortIt(arr) {\n        return arr.sort((a, b) => {\n                if (a.name.toLowerCase() < b.name.toLowerCase()) {\n                        return -1;\n                }\n                if (a.name.toLowerCase() > b.name.toLowerCase()) {\n                        return 1;\n                }\n                return 0;\n        })\n}","import React, { createContext, useState, useContext } from 'react';\nimport mockData from './mock-data'\nimport sortIt from './Utilities/sort';\n\nconst FriendsContext = createContext()\nexport const useFriends = () => useContext(FriendsContext)\n\nexport default function FriendsProvider({ children }) {\n\n        //lazy state initialization for localStorage usage optimization after first render\n        const [friends, setFriends] = useState(\n                () => JSON.parse(window.localStorage.getItem('friends')) || sortIt(mockData)\n        )\n        const [filteredFriends, setFilteredFriends] = useState(friends);\n        const [currPage, setCurrPage] = useState(0);\n        const [pages, setPageCount] = useState(Math.ceil(friends.length / 4))\n        const [searchField, setSearchField] = React.useState(\"\");\n        const [search, setSearch] = useState(false);\n        const [sortFavorite, setSortFavorite] = useState(false);\n\n        const getPaginatedData = () => {\n                if (!search) {\n                        const startIndex = currPage * 4;\n                        const endIndex = startIndex + 4;\n                        if (sortFavorite) {\n                                const favs = friends.filter((friend) => {\n                                        return friend.favorite;\n                                });\n                                const notFavs = friends.filter((friend) => {\n                                        return !friend.favorite;\n                                });\n                                return favs.concat(notFavs).slice(startIndex, endIndex);\n                        } else {\n                                return friends.slice(startIndex, endIndex);\n                        }\n                }\n                if (search) {\n                        const startIndex = currPage * 4;\n                        const endIndex = startIndex + 4;\n\n                        if (sortFavorite) {\n                                const favs = filteredFriends.filter((friend) => {\n                                        return friend.favorite;\n                                });\n                                const notFavs = filteredFriends.filter((friend) => {\n                                        return !friend.favorite;\n                                });\n                                return favs.concat(notFavs).slice(startIndex, endIndex);\n                        } else {\n                                return filteredFriends.slice(startIndex, endIndex);\n                        }\n                }\n        }\n\n        return (\n                <FriendsContext.Provider value={{ friends, currPage, pages, sortFavorite, searchField, filteredFriends, search, setSortFavorite, setSearch, setFilteredFriends, setSearchField, setCurrPage, setFriends, getPaginatedData, setPageCount }}>\n                        {children}\n                </FriendsContext.Provider>\n        )\n}","import React from 'react';\nimport './AddFriend.styles.css'\nimport { useFriends } from '../friendsProvider';\nimport sortIt from '../Utilities/sort';\n\nfunction AddSearchFriend({ add }) {\n        const { searchField, setFilteredFriends, setSearchField, setFriends, friends, setSearch } = useFriends();\n\n        const [name, setName] = React.useState(\"\")\n\n        const addFriend = friend => {\n                setFriends(sortIt([...friends, { name: friend, favorite: false }]))\n        }\n\n        const handleSubmit = e => {\n                if (name.trimEnd().length !== 0) {\n                        addFriend(name.trimEnd())\n                }\n        }\n\n        const handleChange = (e) => {\n                let val = e.target.value;\n                //Allow only characters in input\n                if (val.length !== 0) {\n                        setName(val.replace(/[^A-Za-z ]/ig, '').trimStart())\n                }\n        }\n\n        const searchFriendChange = (e) => {\n                let val = e.target.value;\n                if (val.replace(/[^A-Za-z ]/ig, '').trimStart().length !== 0) {\n                        setSearch(true)\n                        setSearchField(val.replace(/[^A-Za-z ]/ig, '').trimStart())\n                } else {\n                        setSearch(false)\n                        setSearchField(val.replace(/[^A-Za-z ]/ig, '').trimStart())\n                }\n        }\n\n        React.useEffect(() => {\n                const filteredFriends = friends.filter(friend => {\n                        return friend.name.toLowerCase().includes(searchField.toLowerCase())\n                })\n                setFilteredFriends(sortIt(filteredFriends))\n        }, [friends, searchField, setFilteredFriends])\n\n\n        const handleEnterPress = (e) => {\n                if (e.key === 'Enter') {\n                        e.preventDefault();\n                        handleSubmit();\n                        setName(\"\")\n                }\n        }\n\n        return (\n                <div className=\"addfriend\">\n                        <form >\n                                <div>\n                                        <input autoComplete=\"off\" placeholder=\"Add a friend\" id=\"nameInput\" maxLength=\"25\" type=\"text\" onChange={handleChange} onKeyPress={handleEnterPress} value={name} />\n                                        <br></br>\n                                </div>\n                        </form>\n                        <form>\n                                <div>\n                                        <input autoComplete=\"off\" placeholder=\"Search Friend\" id=\"nameInput\" type=\"text\" onChange={searchFriendChange} value={searchField} />\n                                        <br></br>\n                                </div>\n                        </form>\n                </div>\n        )\n}\n\n\n\nexport default AddSearchFriend;\n","import React from 'react';\nimport './FriendCard.styles.css'\nimport { useFriends } from '../friendsProvider';\n\nfunction FriendCard({ friend }) {\n        const { friends, setFriends } = useFriends();\n\n        const deleteFriend = (delFriend) => {\n                setFriends(friends.filter(friend => {\n                        return friend.name === delFriend ? false : true;\n                }))\n        }\n\n        const setFavorite = (favFriend) => {\n                console.log(\"setFavorite was called\")\n                const copy = friends;\n                for (let friend of copy) {\n                        if (friend['name'] === favFriend) {\n                                friend['favorite'] = friend['favorite'] ? false : true;\n                        }\n                }\n                setFriends([...copy])\n        }\n\n        return (\n                <div className=\"frncrd\">\n                        <div className=\"name\"><span>{friend.name}</span></div>\n                        <div className=\"status\">is your Friend</div>\n                        <div className=\"fav\" ><span className={friend.favorite ? \"favSpan red\" : \"favSpan black\"} onClick={() => setFavorite(friend.name)}>&hearts;</span></div>\n                        <div className=\"del\" ><span className=\"delSpan\" onClick={() => deleteFriend(friend.name)}>&#10006;</span></div>\n                </div>\n        )\n}\n\nexport default FriendCard;","import React from 'react';\nimport FriendCard from '../FriendCard/FriendCard.component';\nimport './FriendList.styles.css';\nimport { useFriends } from '../friendsProvider';\n\nfunction FriendList() {\n        const { friends, search, getPaginatedData } = useFriends()\n\n        const paginatedFriends = getPaginatedData(search)\n\n        React.useEffect(() => {\n                window.localStorage.setItem('friends', JSON.stringify(friends))\n        }, [friends])\n\n        console.log(paginatedFriends)\n        return (\n                <div className=\"frnlist\">\n                        {paginatedFriends.map((friend, key) => {\n                                return (\n                                        <FriendCard key={key} friend={friend} />\n                                )\n                        })}\n                </div>\n        )\n}\n\nexport default FriendList;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './footer.styles.css';\nimport { useFriends } from '../friendsProvider';\n\nfunction Footer() {\n        const { setSortFavorite, sortFavorite, search, friends, filteredFriends, setPageCount, currPage, pages, setCurrPage } = useFriends()\n\n        function goToNextPage() {\n                setCurrPage(page => page + 1);\n        }\n\n        function goToPrevPage() {\n                setCurrPage(page => page - 1)\n        }\n\n        React.useEffect(() => {\n                if (!search) {\n                        setPageCount(Math.ceil(friends.length / 4));\n                } else {\n                        setPageCount(Math.ceil(filteredFriends.length / 4));\n                }\n                if (currPage === pages && currPage > 0) {\n                        setCurrPage(currPage - 1)\n                }\n        }, [friends, currPage, pages, setPageCount, setCurrPage, search, filteredFriends.length])\n\n        return (\n                <div className=\"footer\">\n                        <button className=\"previous round\" onClick={goToPrevPage} disabled={currPage < 1 ? true : false}>&#8249; Prev</button>\n                        <button className={sortFavorite ? \"red\" : \"black\"} onClick={() => setSortFavorite(!sortFavorite)}>Sort &hearts;</button>\n                        <button className=\"next round\" onClick={goToNextPage} disabled={currPage === pages - 1 || currPage === pages ? true : false}>Next &#8250;</button>\n                </div>\n        )\n}\n\nexport default Footer;","import Header from './Header/header.component';\nimport React from 'react';\n\nimport './App.css';\nimport AddSearchFriend from './AddFriend/AddFriend.component';\nimport FriendList from './FriendList/FriendList.component';\nimport Footer from './Footer/footer.component';\nimport FriendsProvider from './friendsProvider';\n\n// import { useFriends } from './friendsProvider';\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <Header></Header>\n      <FriendsProvider>\n        <AddSearchFriend />\n        <FriendList />\n        <Footer />\n      </FriendsProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}